// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @include for-legacy-browser("ie", "6", $threshold: $opacity-usage-threshold) {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin clear-fix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin robin-button {
  display: inline-block;
  color: $white;
  background-color: $common-green;
  border-bottom: medium none;
  border-radius: 4px;
  font-weight: normal;
  padding: 15px;
  &:hover {
    background-color: $robin-button-green !important;
  }
}

@mixin triangle($direction, $position, $color: currentcolor, $size: 1em) {
  /* Core stuff */
  content: "";
  height: 0;
  left: 1em;
  position: absolute;
  top: 100%;
  width: 0;
  z-index: 2;
  
  /* Border stuff */
  border-#{opposite-position($direction)}: $size * 1.5 solid $color;
      $perpendicular-border: $size solid transparent;
 
  @if $direction == top or $direction == bottom {
    border-left:   $perpendicular-border;
        border-right:  $perpendicular-border;
  }
 
  @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-border;
        border-top:    $perpendicular-border;
  }
}
