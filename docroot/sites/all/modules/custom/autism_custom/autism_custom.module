<?php
function autism_custom_init() { 
    $countuser = ambitious_get_usercount();
    drupal_add_js(array('autism_custom' => array('supporter_count' => $countuser)), 'setting');
    
    drupal_add_js(array('autism_custom' => array('supporters_url' => variable_get('supporters_url', '0'))), 'setting');
    
    drupal_add_js(array('autism_custom' => array('supporters_value_type' => variable_get('supporters_value_type', '0'))), 'setting');  
    
    drupal_add_js(drupal_get_path('module', 'autism_custom') . '/autism_custom.js', 'file');  
}

function autism_custom_views_post_execute(&$view) { 	 
 if($view->name == "stream" && $view->current_display == 'stream_topic_page' && $view->query->pager->current_page === 0) {
	 $nidarg = arg(1);  
	 if ($nidarg > 0) {
    	 $node = node_load($nidarg);
         $data = new stdclass(); 
         $items = $view->result[0];
         foreach($items as $key => $item) {
			 if ($key == 'nid') {
                $data->nid = $node->nid;
	         } elseif ($key == 'node_created') {
                $data->node_created = $node->created;
             } else {
			   $data->{$key} = is_array($item) ? array() : '';	 
			 }
	     }
         array_unshift($view->result, $data);
    } 
 }  
    
}


function getcommentcount_past2week($nid) {
  if (!is_numeric($nid)){
    return false;
  }
  $time = time();
  $from = $time - (variable_get('autism_custom_past_week', 2) * 604800);
  
  // Create an object of type SelectQuery
  $query = db_select('comment', 'c');
   
  // Add extra detail to this query object: a condition, fields and a range
  $query->condition('c.created', array($from, $time), 'between');
  $query->condition('c.nid', $nid);
  $query->condition('status', '1');
  return $query->countQuery()->execute()->fetchField();
}

// Function to get the comment threshold or popular 
// forum post marker
function get_popular_thread_comment_threshold(){
  // bring all the logic here and make use of this method.
}

function autism_custom_menu() {
    $items = array();    
    
    $items['admin/content/website'] = array(
        'title' => 'Site settings',
	'page callback' => 'drupal_get_form',
        'page arguments' => array('autism_custom_settings_form'),
	'access arguments' => array('access_settings_form_website'),
        'type' => MENU_LOCAL_TASK, //Will appear in Navigation menu.
    ); 
     
  $items['header'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('Header'),
    'description' => 'Header',
    'page callback' => 'autism_custom_header',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['footer'] = array(
    'type' => MENU_NORMAL_ITEM,
    'title' => t('Footer'),
    'description' => 'Footer',
    'page callback' => 'autism_custom_footer',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  // this the sample value 
  // $items['sample/data'] = array(
  //       'title' => 'Site settings',
  //       'page callback' => 'autism_customsss', 
  //       'access arguments' => array('access content'),
  //     );
 
  
  return $items;
}

// this the sample value 
//function autism_customsss($value){
//removing the $value input 
//needs a revisit here
/*function autism_customsss(){
  print '560';   
}*/

function autism_custom_header() {

  // http://ambitiousaboutautismzqxcu3kr3v.devcloud.acquia-sites.com/sites/all/themes/ambitious/css/layouts/bsd-wrapper.css
  // http://ambitiousaboutautismzqxcu3kr3v.devcloud.acquia-sites.com/sites/all/themes/ambitious/css/layouts/jcf.css
  
  drupal_add_css('//ambitiousaboutautismzqxcu3kr3v.devcloud.acquia-sites.com/sites/all/themes/ambitious/css/layouts/bsd-wrapper.css', array(
        'type' => 'external'
      ));

  drupal_add_css('//ambitiousaboutautismzqxcu3kr3v.devcloud.acquia-sites.com/sites/all/themes/ambitious/css/layouts/jcf.css', array(
        'type' => 'external'
      ));

  drupal_add_css('//ambitiousaboutautismzqxcu3kr3v.devcloud.acquia-sites.com/sites/all/themes/ambitious/css/all.css', array(
        'type' => 'external'
      ));

  drupal_add_css('//ambitiousaboutautismzqxcu3kr3v.devcloud.acquia-sites.com/sites/all/themes/ambitious/css/forms.css', array(
        'type' => 'external'
      ));

  $content = 'Header';
  return $content;
}

function autism_custom_footer() {
  $content = 'Footer'; 
  return $content;
}

function autism_custom_settings_form($form, &$form_state) { 
  
  $form['supporters_value']['value_type'] = array(
    '#type' => 'radios',
    '#title' => t('Supporters value type <span class="form-required" title="This field is required.">*</span>'), 
    '#default_value' => variable_get('supporters_value_type', 'offset'),
    '#options' => array(
      'web' => t('Value from web service method'),
      'both' => t('Value from web service method + Offset value'),
      'offset' => t('Offset value'), 
    ),
  ); 
  $form['supporters_value']['url'] = array(
    '#type' => 'textfield',
    '#title' => 'URL <span class="form-required" title="This field is required.">*</span>',
    '#default_value' => variable_get('supporters_url', '0'),    
    '#description' => t("ex: www.domin.com"), 
    '#states' => array( 
      'invisible' => array( 
        ':input[name="value_type"]' => array('value' => 'offset'),
      ),
    ),  
  );    
  $form['autism_custom_supporter_count'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of members and supporters <span class="form-required" title="This field is required.">*</span>'),
    '#default_value' => variable_get('autism_custom_supporter_count', 0),
    '#size' => 10,
    '#maxlength' => 10,
    '#description' => t('The Number of members and supporters for the community.'), 
    '#states' => array( 
      'invisible' => array( 
        ':input[name="value_type"]' => array('value' => 'web'),
      ),
    ), 
  );
   $form['autism_custom_comment_count'] = array(
    '#type' => 'textfield',
    '#title' => t('Forum: comments threshold for popular discussion'),
    '#default_value' => variable_get('autism_custom_comment_count', 0),
    '#size' => 10,
    '#maxlength' => 10,
    '#description' => t('Number of comments the thread needs to have to be considered popular'),
    '#required' => TRUE,
  );
  $form['autism_custom_past_week'] = array(
    '#type' => 'textfield',
    '#title' => t('Forum: weeks to consider comments for popular thread'),
    '#default_value' => variable_get('autism_custom_past_week', 0),
    '#size' => 10,
    '#maxlength' => 2,
    '#description' => t('Number of weeks back we should look to calculate the number of comments'),
    '#required' => TRUE,
  );
   $form['submit'] = array('#type' => 'submit', '#value' => t('Save configuration'));  
  
  return $form;
}

function autism_custom_settings_form_validate($form, &$form_state){
  $max_num = $form_state['values']['autism_custom_supporter_count'];
  
  if (!is_numeric($max_num) && $form_state['values']['value_type'] != 'web'){
    form_set_error('autism_custom_supporter_count', t('You must enter a number for the number of members and supporters in community.'));
  }
  elseif ($max_num <= 0  && $form_state['values']['value_type'] != 'web'){
    form_set_error('autism_custom_supporter_count', t('Number of members and supporters of community to display must be positive.'));
  }
  $max_week = $form_state['values']['autism_custom_past_week'];
  if (!is_numeric($max_week)){
    form_set_error('autism_custom_past_week', t('You must enter a number for the number of weeks.'));
  }
  elseif (($max_week <= 0)||($max_week>52)){
    form_set_error('autism_custom_past_week', t('Number of weeks exceeded for the year or enter a value apart from zero.'));
  }
  $max_num = $form_state['values']['autism_custom_comment_count'];
  if (!is_numeric($max_num)){
    form_set_error('autism_custom_comment_count', t('You must enter a number for the number of comments.'));
  }
  elseif ($max_num <= 0){
    form_set_error('autism_custom_comment_count', t('Number of comments to display must be positive.'));
  }
  if($form_state['values']['value_type'] != 'offset' && $form_state['values']['url'] ==''){
    form_set_error('url', t('Please fill the url to get the data.'));
  }  
   
  
}

function autism_custom_settings_form_submit($form, &$form_state){ 
  variable_set('supporters_value_type', $form_state['values']['value_type']);  
  variable_set('supporters_url', $form_state['values']['url']);
   
  variable_set('autism_custom_supporter_count', $form_state['values']['autism_custom_supporter_count']); 
  variable_set('autism_custom_comment_count', $form_state['values']['autism_custom_comment_count']); 
  variable_set('autism_custom_past_week', $form_state['values']['autism_custom_past_week']); 
  drupal_set_message('The configuration options have been saved.');
}

function autism_custom_permission() {
  return array(
    'access_settings_form_website' => array(
      'title' => t('Access settings form for the website'),
    )
  );
}

/**
 * Implementation of hook_views_query_alter
 * @param type $view
 * @param type $query 
 */
function autism_custom_views_query_alter(&$view, &$query) {

  if ($view->name == 'stream' && $view->current_display == 'stream_topic_page' && isset($query->table_queue['field_data_eq_node']) && isset($query->table_queue['eq_node_node'])) {
    if(is_numeric(arg(1)) && arg(0) == 'node'){
      $nid = is_numeric(arg(1)) ? arg(1) : 74481;
      $node = node_load($nid);
      if (isset($node->field_stream_order_reference['und'][0]['target_id'])) {
       $name = db_select('entityqueue_subqueue', 'eq')
                ->fields('eq',array('name', 'queue', 'subqueue_id'))
                ->condition('subqueue_id',$node->field_stream_order_reference['und'][0]['target_id'])
                ->execute()
                ->fetchAll();
       $queue = array_shift($name);
       $query->table_queue['field_data_eq_node']['join']->extra[0]['field'] = 'entity_id';
       $query->table_queue['field_data_eq_node']['join']->extra[0]['value'] = $queue->subqueue_id;
       $query->table_queue['field_data_eq_node']['join']->definition['extra'][0]['field'] = 'entity_id';
       $query->table_queue['field_data_eq_node']['join']->definition['extra'][0]['value'] = $queue->subqueue_id;       
       $query->table_queue['eq_node_node']['join']->extra[0]['field'] = 'name';                
       $query->table_queue['eq_node_node']['join']->extra[0]['value'][0] = $queue->name;
       $query->table_queue['eq_node_node']['join']->definition['extra'][0]['field'] = 'name';                
       $query->table_queue['eq_node_node']['join']->definition['extra'][0]['value'][0] = $queue->name;
     }
    }
  }

  if ($view->name == 'stream' && $view->current_display == 'stream_forum_page') {
    foreach($query->orderby as $okey => $order) {
      $key = array_search('node_comment_statistics_comment_count', $order);

      if ($key){

        $join = new views_join();
        $join->table = 'comment';
        $join->field = 'nid';
        $join->left_table = 'node';
        $join->left_field = 'nid';
        $join->type = 'left';

        // "year"   => 29030400, // seconds in a year   (12 months)
        // "month"  => 2419200,  // seconds in a month  (4 weeks)
        // "week"   => 604800,   // seconds in a week   (7 days)
        // "day"    => 86400,    // seconds in a day    (24 hours)
        // "hour"   => 3600,     // seconds in an hour  (60 minutes)
        // "minute" => 60,       // seconds in a minute (60 seconds)
        // "second" => 1         // 1 second

        $join->extra = 'past_comment.created >= UNIX_TIMESTAMP() - (604800*('.variable_get('autism_custom_past_week', 2).'))';
        $query->add_relationship('past_comment', $join, 'node');
        $query->add_field('past_comment', 'nid', 'period_comment_count', array('function' => 'count'));
        $query->orderby[$okey]['field'] = 'period_comment_count';
        $query->distinct = TRUE;

        break;

      }      
    }
  }
  if ($view->name == 'list' && $view->current_display == 'block_2') {
    $query->orderby = array(
      array(
        'field' => '-field_data_field_closing_date.field_closing_date_value',
        'direction' => 'DESC',
      )
    ); 
  }
}

function autism_custom_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-stream-stream-forum-page') {
   $form['search_community'] = array(
    '#type' => 'textfield',
    '#attributes' => array(
      'placeholder' => 'Search the community',
    ),
   );
   $form['#info']['search_box'] = array('value' => 'search_community');
   $form['#validate'][] = 'autism_custom_search_community_submit';
  }
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-stream-events-page') {
    $nodescount = "";  
    foreach ($form['field_event_tid']['#options'] as $tid => $val){  
      if($tid!= "All"){
        $nodes = count(taxonomy_select_nodes($tid, FALSE));
        $form['field_event_tid']['#options'][$tid] = $form['field_event_tid']['#options'][$tid]." (".$nodes.")"; 
      }  
      $nodescount +=$nodes; 
    }
    if(0 < $nodescount){
      $form['field_event_tid']['#options']['All'] = "Show all events (".$nodescount.")";
    }else{
      $form['field_event_tid']['#options']['All'] = "Show all events";
    }
    
  }

  if (isset($form['type']['#value'])) {
  if($form['type']['#value'] == 'my_voice_blog'){
   global $user;
   if($user->roles[11] != "administrator"){
     unset($form['field_related_topic']);
   }
  } 
}

}

function autism_custom_search_community_submit($form, &$form_state) {
/*  if ($form_state['values']['search_community'] != '') {
    drupal_goto('search/forum_discussion/' . $form_state['values']['search_community']);
  }*/
}

function ambitious_get_last_reply($nid) {
  $count = db_query('SELECT COUNT(comment.cid) FROM {comment} as comment left join {flagging} as fl on fl.entity_id = comment.cid and fl.entity_id is null WHERE comment.nid = :nid AND comment.status = :status', array(
    ':nid' => $nid,
    ':status' => COMMENT_PUBLISHED,
  ))->fetchField();
   if ($count > 0) {
     $comment = db_query_range('SELECT comment.cid, comment.name, comment.changed, comment.uid FROM {comment} as comment left join {flagging} as fl on fl.entity_id = comment.cid WHERE comment.nid = :nid AND comment.status = 1 and fl.entity_id is null ORDER BY comment.cid DESC', 0, 1, array(':nid' => $nid))->fetchObject();
     return $comment;
   }
   return false;
}

//new codes by amalan to get the number of the users

function facebook_count($url){
 
    // Query in FQL
    $fql  = "SELECT like_count";
    $fql .= " FROM link_stat WHERE url = '$url'";
 
    $fqlURL = "https://api.facebook.com/method/fql.query?format=json&query=" . urlencode($fql);
 
    // Facebook Response is in JSON
    $response = file_get_contents($fqlURL);
    return json_decode($response);
 
  }

function twitter_user_info($screen_name)
{ 
    $data = file_get_contents("https://cdn.syndication.twimg.com/widgets/followbutton/info.json?screen_names=" . $screen_name);
    $data = json_decode($data, true); 
    //print_r($data);
    return $data[0]['followers_count'];
    //echo $data; return $data[0]; 
}

function ambitious_get_usercount(){
// //facebook code
// $fb = facebook_count('https://www.facebook.com/ambitiousaboutautism');
// $fb_count = $fb[0]->like_count;
// //dpm('facebook count : '.$fb_count); 
// //end of the facebook code

// //twitter codes
// $twittercount1 = twitter_user_info("ambitiousautism"); 
// //dpm('twitter followers : '.$twittercount1);
// //end of twitter codes


// //endofnew
// //code to update the database 
//   // $valuetest = 300 ; 
//   //   $num_updated = db_update('user_count') // Table name no longer needs {}
//   //   ->fields(array(
//   //     'count' => $valuetest,
//   //   ))
//   //   ->condition('id', 1, '=')
//   //   ->execute();
// //end of the update code
// // $numberfrombsd = file_get_contents("http://ambitious.cp.bsd.net/utils/cons_counter/cons_counter.ajax.php");
// // dpm($numberfrombsd);

// //code to get the count from the database
//   $sql = 'SELECT totalcount as totalcount
//     FROM user_count
//     WHERE id=1';
//   $result = db_query($sql);
//   foreach ($result as $record) {
//     //dpr($record->count);
//     //dpm('BSD count : '.$record->totalcount);
//     $test = $record->totalcount;
//   }
// 
// $finalcount = $fb_count + $test + $twittercount; 

  // dpm('final count : '.$finalcount);
  // dpm('bsdcount : '.variable_get('bsdcount'));
  // dpm('fbcount : '.variable_get('fbcount'));
  // dpm('twittercount : '.variable_get('twittercount'));

  $finalcount = variable_get('bsdcount')+variable_get('fbcount')+variable_get('twittercount');
  //dpm('total amount : '.$finalcount);
  return $finalcount;
//end of the code

//get the value from the database and return to the user
}

function autism_custom_cron(){
  //updating the bsd count
  // $numberfrombsd = file_get_contents("http://ambitious.cp.bsd.net/utils/cons_counter/cons_counter.ajax.php");

  // //updating fb count
  // $fb = facebook_count('https://www.facebook.com/ambitiousaboutautism');
  // $fb_count = $fb[0]->like_count;

  // //update twitter account
  // $twittercount = twitter_user_info("ambitiousautism");

  //require('helper.php');
  require('facebookhelper.php');
  require('twitterhelper.php');
  require('bsdhelper.php');
  $fbobject = new facebookhelper;
  $fb_count = $fbobject->set_supporter_count();
  //dpm('Facebook '.$fb_count);
  // echo 'Facebook '.$count;
  // echo '<br>';
  $twitterobject = new twitterhelper;
  $twittercount = $twitterobject->set_supporter_count(); 
  //dpm('Twitter '.$twittercount); 
  // echo 'Twitter '.$count;
  // echo '<br>';
  $bsdobject = new bsdobject;
  $numberfrombsd = $bsdobject->set_supporter_count();  
  //dpm('BSD '.$numberfrombsd);
  // echo 'BSD '.$count;
  // echo '<br>';

  variable_set('bsdcount', $numberfrombsd);
  variable_set('fbcount', $fb_count);
  variable_set('twittercount', $twittercount);
}