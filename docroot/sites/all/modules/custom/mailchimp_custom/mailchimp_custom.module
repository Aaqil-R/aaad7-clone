<?php
require("vendor/autoload.php");



function mailchimp_custom_init(){
	//to see the list id.
	// $MailChimp = new \Drewm\MailChimp('698807ce039f92ea3b417de902be2a94-us11');
	// $result1 = $MailChimp->call('/lists/list');
	// dpm($result1);

}

function mailchimp_custom_webform_submission_insert($node, $submission){

	//check the node type we dont need this as we will be looking the webforms from the mailchimp subscription
	dpm($submission);


	//must check whether the user ticked the mailchimp option and the send the request
	if(isset($submission->data[4][0])){
		dpm('enabled');
		//replace api with the clients api
		//$MailChimp = new \Drewm\MailChimp('cd1f99363f8227c11b3130efb6039c31-us11');
		$MailChimp = new \Drewm\MailChimp('698807ce039f92ea3b417de902be2a94-us11');
		//defining the variables
		$email ='';
		$firstname = '';
		$lastname = '';
		$newevent = '';
		$neweventarray = array();
		//$nid = $node->nid;
		//dpm($node);
		$contenttype = '';
		//similarly we can add the new variables below
		//must check whether these are isset.
		if(isset($submission->data[1][0])){
			$email = $submission->data[1][0];
			dpm($email);
		}
		if(isset($submission->data[2][0])){
			$firstname = $submission->data[2][0];
			dpm($firstname);
		}
		if(isset($submission->data[3][0])){
			$lastname = $submission->data[3][0];
			dpm($lastname);
		}
		if(isset($submission->data[5][0])){
			$newevent = $submission->data[5][0];
			$neweventarray = array($submission->data[5][0]);
			dpm($newevent);
			dpm($neweventarray);
		}
		if(isset($submission->data[6][0])){
			$contenttype = $submission->data[6][0];
			dpm($contenttype);
		}
		//we have to get the event type and the event name to which user has subscribed
		//assign the new event to relevent webform value

		//new codes
		//to see the lists on the view
		// $result1 = $MailChimp->call('/lists/interest-groupings' , array(
		//                 		'id' => '1430d8d688'));

		//check whether the subscriber is from the list
		$result3 = $MailChimp->call('/lists/member-info', array(
			'id' => '20af80b11d',
		    'emails' => array(
		    	0 => array('email'=>$email))
		    )
		);

		//get the earlier values of the events
		//print_r(print_event_list($result3));


		//from the result we have to check the success count and if its 0 the we must create a new user or update the exsisting user
		if($result3['success_count'] == 1)
		{
			//if the user exsist then we must get the earlier subscribed events
			$eventlist = print_event_list($result3);
			$events = $eventlist['events'];
			$courses = $eventlist['courses'];
			$news = $eventlist['news'];

			dpm($eventlist);
			//check for the event type and add the event to the correct array
			if($contenttype == 'events'){
				dpm("i am a event");
				array_push($events, $newevent);
			}
			elseif($contenttype == 'courses')
			{
				// dpm("i am a course");
				array_push($courses, $newevent);
			}
			//update the current user
			$result = $MailChimp->call('/lists/update-member', array(
				'id' => '20af80b11d',
			    'email' => array('email'=>$email),
				'merge_vars' => array(
			        'groupings' => array(
			            0 => array(
			                'name' => 'Events',
			                'groups' => $events
			                ),

			            1 => array(
			                'name' => 'Courses',
			                'groups' => $courses
			                ),

			            2 => array(
			                'name' => 'News Letters',
			                'groups' => $news
			                ),
			            )
			        ),
			   	'double_optin' => false,
			    'update_existing' => true,
			    'replace_interests' => true,
			    'send_welcome' => false,
			    )
			);
		}
		else{
			echo "user not found";
			//bit of modification done from the normal way. in order to add the new user
			$name = '';
			if($contenttype == 'events'){
				// dpm("i am a event");
				$name = 'Events';
			}
			elseif($contenttype == 'courses')
			{
				// dpm("i am a course");
				$name = 'Courses';
			}
			//create a new user
			$result = $MailChimp->call('lists/subscribe', array(
			    'id' => '20af80b11d',
			    'email' => array('email'=>$email),
			    'merge_vars' => array(
			    	'fname'=>$firstname, 
			        'lname'=>$lastname,
			        'groupings' => array(
			            0 => array(
			                'name' => $name,
			                'groups' => $neweventarray
			                )
			            )
			        ),
			    'double_optin'      => false,
			    'update_existing'   => true,
			    'replace_interests' => true,
			    'send_welcome'      => false,
			    )
			);
		}
		//end of the new codes
	}
	else{
		dpm('disabled');
	}
	
}

function print_event_list($result3){
	$total_events = array();
	//gather the subscribed list from the result
	$subscribed_groups_list = $result3['data']['0']['merges']['GROUPINGS'];
	foreach ($subscribed_groups_list as $group) {
		$subscribed_list = $group['groups'];
		//$subscribed_list_name = $group['name'];
		if($group['name'] == 'Events'){
			$subscribed_events = get_subscribed_events($subscribed_list);
		}
		elseif($group['name'] == 'Courses'){
			$subscribed_courses = get_subscribed_events($subscribed_list);
		}
		elseif($group['name'] == 'News Letters'){
			$subscribed_news = get_subscribed_events($subscribed_list);
		}
	}
	$total_events['events']=$subscribed_events;
	$total_events['courses']=$subscribed_courses;
	$total_events['news']=$subscribed_news;
	//print_r($total_events);
	return $total_events;
};

//by sending the event type we can get the actual events with that to which user has subscribed.
function get_subscribed_events($array){
	$subscribed_events = array();
	foreach ($array as $event) {
		//if the user has already subscribed to a list the add them to an array
		if($event['interested'] == 1){
			//these are the already subscribed events of the user
			array_push($subscribed_events, $event['name']);
		}
	}
	return $subscribed_events;
};

//get the first name , lastname , phone number , post code , address , city , country
// function print_event_list($result3){
// 	//gather the subscribed list from the result
// 	$subscribed_groups_list = $result3['data']['0']['merges']['GROUPINGS'];
// 	//print_r($total_events);
// 	return $total_events;
// };


?>