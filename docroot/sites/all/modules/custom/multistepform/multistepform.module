<?php
/**
 * Implements hook_node_info().
 */
function multistepform_node_info() {
  return array(
    'multistepform' => array(
      'name' => t('Multi Step Form'),
      'base' => 'multistepform',
      'description' => t('A <em>Multi Step Form</em> is a a collection of webform, render as steps for the user.'),
      'title_label' => t('Title'),
      'has_body' => FALSE,
      'locked' => TRUE,
    )
  );
}

/**
 * Implements hook_form().
 */
function multistepform_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_view().
 */
function multistepform_view($node, $view_mode) {
$form = drupal_get_form('multistepform_client_form', $node);
$output = drupal_render($form);
  $node->content['multistepform'] = array(
  '#markup' => $output,
  );
  
  return $node;
}

/**
 * Implements hook_menu().
 */
function multistepform_menu() {

  $items = array();
  $items['admin/config/content/webform/multistepform'] = array(
     'title' => 'Multiple step form with webforms',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('multistepform_config'),
     'access arguments' => array('access content'),
     'file' => 'multistepform.admin.inc',
     'type' => MENU_NORMAL_ITEM,
  );
  $items['complete-page'] = array(
    'title' => 'Survey Complete',
    'page callback' => 'customer_survey_complete',
    'page arguments' => array(),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['node/%multistepform_menu/multistepform'] = array(
     'title' => 'Multi Step Form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('multistepform_config', 1),
    'access arguments' => array('access content'),
     'file' => 'multistepform.admin.inc',
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
  );
  
  return $items;
}


function multistepform_menu_load($nid) {
   if (!is_numeric($nid)) {
    return FALSE;
  }
  $node = node_load($nid);
  if (!isset($node->type) || $node->type != 'multistepform') {
    return FALSE;
  }
  return $node;
}

function multistepform_node_load($nodes, $types) {
  if (!in_array('multistepform', $types)) {
    return;
  }
    $result = db_select('multistepform', 'm')
    ->fields('m')
    ->condition('nid', array_keys($nodes), 'IN')
    ->orderBy('weight')
    ->execute()
    ->fetchAll();
    foreach($result as  $multistepform) {
      $nodes[$multistepform->nid]->multistep_form[] = $multistepform;
    }
    $result = db_select('multistepform_settings')
    ->fields('multistepform_settings')
    ->condition('nid', array_keys($nodes), 'IN')
    ->execute()
    ->fetchAll();
    foreach($result as  $multistepform) {
      $nodes[$multistepform->nid]->multistep_settings = (array) $multistepform;
    }    
}
function multistepform_client_form($form, &$form_state, $node) {
  if (!isset($form_state['stage'])) $form_state['stage'] = 0;
     $form_state['multistep_node'] = $node;
     $steps = array();
     if (isset($node->multistep_form)){
       $steps = $node->multistep_form;
     }
     $count = count($steps);
  if ($count && ($form_state['stage'] < $count)) {
    $nid = $steps[$form_state['stage']]->wnid;
    $stepnode = node_load($nid);
    $stepnode->webform['redirect_url'] = '<none>';
     if (isset($form_state['storage']) && isset($form_state['storage']['component_tree'])) unset($form_state['storage']['component_tree']);
     if (isset($form_state['storage']) && isset($form_state['storage']['submitted'])) unset($form_state['storage']['submitted']);
     if (isset($form_state['values']) && isset($form_state['values']['submitted']))  unset($form_state['values']['submitted']);
    if (isset($form_state['form_submission'][$nid]) && isset($form_state['form_submission'][$nid]['sid'])) {
      module_load_include('inc','webform','webform.submissions');
      $submissions = webform_get_submission($nid, $form_state['form_submission'][$nid]['sid']);
      return webform_client_form($form, $form_state, $stepnode, $submissions);
    } else {
     return webform_client_form($form, $form_state, $stepnode);
    }
  }else {
    if (!isset($node->multistep_settings) || ( $node->multistep_settings['confirmation_status'] === 0 && $node->multistep_settings['confirmation'] == '')){
      $form['completion'] = array('#markup' => t('Thank you submission'));
    } else if ( $node->multistep_settings['confirmation_status'] == '0' ) {
      $form['completion'] = array('#markup' => check_markup($node->multistep_settings['confirmation'], $node->multistep_settings['confirmation_format'], '', FALSE));
    } else  if ( $node->multistep_settings['confirmation_status'] == '1' && $node->multistep_settings['redirect_url'] != '' ) {
      drupal_goto($node->multistep_settings['redirect_url']);
    } else {
      $form['completion'] = array('#markup' => t('Thank you submission'));
    }
  }
  return $form;
}
function multistepform_client_form_validate($form, &$form_state) {

}
function multistepform_client_form_submit($form, &$form_state) {
  $form_state['rebuild'] = TRUE;
  if ($form_state['values']['op'] == 'Back') {
     $form_state['stage'] = $form_state['stage'] - 1;
  } else {
     if (!isset($form_state['form_submission'])) $form_state['form_submission'] = array();
      if (isset($form_state['multistep_node']->multistep_form)){
        $steps = $form_state['multistep_node']->multistep_form;
      }
      $form_state['form_submission'][$steps[$form_state['stage']]->wnid]['sid'] = $form_state['values']['details']['sid'];
      unset($form_state['values']['details']);
      $form_state['stage'] = $form_state['stage'] + 1;
     
  }

}
function multistepform_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'multistepform_client_form':
      $form['#submit'][] = 'multistepform_client_form_submit';
      $form['#validate'][] = 'multistepform_client_form_validate';
      $steps = array();
      if (isset($form_state['multistep_node']->multistep_form)){      
        $steps = $form_state['multistep_node']->multistep_form;
      }
      $count = count($steps);
      if (isset($form_state['stage']) && $form_state['stage'] > 0 && $form_state['stage'] < $count) {
        $form['back'] = array(
          '#type' => 'submit',
          '#value' => 'Back',
        );
      }
      if (isset($form_state['stage']) && ($form_state['stage'] != ($count - 1))) {
        $form['actions']['submit']['#value'] = 'Next';
      }
      break;
    default:  
  }
}

function multistepform_node_delete($node) {
  if ($node->type == 'webform'){
    db_delete('multistepform')->condition('wnid', $node->nid)->execute();  
  }
  if ($node->type == 'multistepform') {
    db_delete('multistepform')->condition('nid', $node->nid)->execute();
    db_delete('multistepform_settings')->condition('nid', $node->nid)->execute();    
  }
}

function multistepform_theme() {
 $themes = array(
    'form_are_you_with_us' => array(
      'render element' => 'element',
    ),
  );
  return $themes;
}
function theme_form_are_you_with_us($variables) {
  $element = $variables['element'];
  //dpm($element['#children']);
  $output = drupal_render($element);
  return $output;
}
function multistepform_block_info() {
 $blocks = array();
/*  $result = db_select('multistepform_settings')
    ->fields('multistepform_settings')
    ->condition('block', 1)
    ->execute()
    ->fetchAll();
   foreach($result as  $multistepform) {
     $node = node_load($multistepform->nid);
     $blocks['multistep_'.$multistepform->nid] = array(
      'info' => t('Multi Step Form:'.$node->title),
      'cache' => DRUPAL_NO_CACHE,
     );   
    } */
  return $blocks;
}

function multistepform_block_view($delta = '') {
  // This example is adapted from node.module.
  $block = array();

  // Get the node ID from delta.
  $nid = drupal_substr($delta, strrpos($delta, '_') + 1);
  $node = node_load($nid);
  $subject = $node->title;
  $form = drupal_get_form('multistepform_client_form', $node);
   $block = array(
    'subject' => $subject,
    'content' => drupal_render($form),
  );
  return $block;
}
