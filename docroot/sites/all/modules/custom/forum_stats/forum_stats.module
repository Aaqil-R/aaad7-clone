<?php 
 
function forum_stats_menu() {
  $items = array(); 
   $items['forum-stats'] = array( 
    'title' => 'Forum stats',   
    'page callback' => 'drupal_get_form',
    'page arguments' => array('forum_stats_settings_form'),
    'access arguments' => array('config_settings_forum_stats'),  
  );
  return $items;
}

function forum_stats_permission() {
  return array(
    'config_settings_forum_stats' => array(
      'title' => t('Forum stats question settings form'),
    ) 
  );
}
 function forum_stats_settings_form($form, &$form_state){ 
 
 
 if (isset($_GET['selected'])) {
   $filtervalue = $_GET['selected'];
 } else {
   $filtervalue = 2;
 }
 $from_date = '';
 $to_date = ''; 
 
 switch ($filtervalue) {
    case "0":
         $from_date = strtotime(format_date(strtotime(date('d M Y 00:00:00'))));
         $to_date = strtotime(format_date(time()));
        break;
    case "1":
        $from_date = strtotime('-7 days',time());
        $to_date = strtotime(format_date(time()));
        break;
    case "2":
        $from_date = strtotime('-14 days',time());
        $to_date = strtotime(format_date(time()));
        break;
    case "3":
        $from_date = strtotime('-90 days',time());
        $to_date = strtotime(format_date(time()));
        break;
    case "4":
         $from_date = strtotime($_GET['from']);
         $to_date = strtotime($_GET['to']);  
        break;
    }
    
drupal_add_library('system', 'ui.datepicker');
 drupal_add_js(drupal_get_path('module', 'forum_stats').'/forum_stats.js');
 drupal_add_css(drupal_get_path('module', 'forum_stats').'/forum_stats.css');
 
 $num_users = db_select('users', 'u')
  ->fields('u')
  ->condition('status', 1) 
  ->countQuery()
  ->execute()
  ->fetchField();  
   
  $num_resent_users = db_select('users', 'u')
  ->fields('u')
  ->condition('created', array($from_date,$to_date), 'BETWEEN')
  ->condition('status', 1)  
  ->countQuery()
  ->execute()
  ->fetchField();     
  
  //SELECT uid FROM users WHERE created BETWEEN '1234979137' AND '1235147603'
  
  
   $num_active_users = db_select('comment' , 'c') 
  ->fields('c', array('uid'))
  ->condition('c.created', array($from_date,$to_date), 'BETWEEN')
  ->distinct()
  ->countQuery()
  ->execute()
  ->fetchField();   
  //SELECT count(DISTINCT uid) FROM comment WHERE created BETWEEN '1236598715' AND '1236677072'
  
  
  $num_started_forum = db_select('node' , 'n') 
  ->condition('type', 'forum_discussion')
  ->fields('n') 
  ->condition('created', array($from_date,$to_date), 'BETWEEN')
  ->condition('status', 1) 
  ->distinct()
  ->countQuery()
  ->execute()
  ->fetchField();     
  //SELECT COUNT(nid) FROM node WHERE created BETWEEN '1416526838' AND '1421495610' AND type='forum_discussion' 
  
  
  $num_comment_posted = db_select('comment', 'c')
  ->fields('c')
  ->condition('created', array($from_date,$to_date), 'BETWEEN')
  ->countQuery() 
  ->execute()
  ->fetchField();    
  //SELECT count(uid) FROM comment WHERE created BETWEEN '1236598715' AND '1236677072'
  

  $page = pager_find_page();
  $offset = 9 * $page;
  $num_per_page =  9;
  $total = db_select('comment', 'c')
                ->fields('c', array('uid'))
                ->groupBy('c.uid') 
  ->condition('created', array($from_date,$to_date), 'BETWEEN')
  ->orderBy('cuser', 'DESC')->orderBy('c.uid', 'DESC')->range(0, 25)->countQuery()->execute()->fetchField();
  $num_top_comment = db_select('comment', 'c')
  ->fields('c', array('uid'));
  $num_top_comment->addExpression('COUNT(c.uid)', 'cuser');  
  $num_top_comment->groupBy('c.uid') 
  ->condition('created', array($from_date,$to_date), 'BETWEEN')
  ->orderBy('cuser', 'DESC')->orderBy('c.uid', 'DESC')->range($offset, $num_per_page);

  $num_top_comment_posted = $num_top_comment->execute(); 
  pager_default_initialize($total, $num_per_page);
  $num_top_comment_posted = $num_top_comment_posted->fetchAllAssoc('uid');   
  //SELECT count(uid), uid, name FROM comment WHERE created GROUP BY uid ORDER BY count(uid) DESC LIMIT 25   
  
  $profile = '<ul class="images-list">';
  $index = 1;
    foreach($num_top_comment_posted as $newvalus){
       $usid = user_load($newvalus->uid); 
       $profile .= '<li id="item'. $page . '-' . $index .'">'.theme_image_style(array('style_name' => 'medium','path' => $usid->picture->uri, 'attributes' => array( 'class' => 'avatar'))).'<h5 class ="name">'.$usid->name.'</h5></li>';
       $index++;
    }
    $profile .= '</ul>'; 
  
  
  $num_top_forum = db_select('node' , 'n');
  $num_top_forum->innerjoin('comment', 'c', 'c.nid = n.nid');
  $num_top_forum = $num_top_forum->condition('n.type', 'forum_discussion')
  ->fields('c', array('uid','name'))  
  ->groupBy('c.uid') 
  ->condition('n.created', array($from_date,$to_date), 'BETWEEN')
  ->condition('n.status', 1) 
  ->orderBy('nuser', 'DESC')
  ->range(0,10);
  $num_top_forum->addExpression('COUNT(c.uid)', 'nuser');  
  $num_top_forum_posted = $num_top_forum->execute(); 
  $num_top_forum_posted = $num_top_forum_posted->fetchAllAssoc('uid'); 
  
 
  
  $forum_posted = '<ul class="images-list">';
    foreach($num_top_forum_posted as $forum_posteds){
       $usids = user_load($forum_posteds->uid); 
       $forum_posted .= '<li>'.theme_image_style(array('style_name' => 'medium','path' => $usids->picture->uri, 'attributes' => array( 'class' => 'avatar'))).'<h5 class ="name">'.$usids->name.'</h5></li>';
    }
    $forum_posted .= '</ul>'; 
    
    $result =  '<h3>Top 25 active members</h3>'.$profile.theme('pager').'<h3>Top 10 people starting discussions</h3>'.$forum_posted;
    
  //SELECT count(comment.nid), node.nid, node.title FROM node INNER JOIN comment ON node.nid=comment.nid  WHERE node.created BETWEEN '1416526838' AND '1421495610' AND node.type='forum_discussion' GROUP BY comment.nid ORDER BY COUNT(comment.nid) DESC LIMIT 10
 
   $form['selected'] = array(
       '#type' => 'select', 
       '#options' => array(0 => t('Today'), 1 => t('Past week'), 2 => t('Past 2 weeks'), 3 => t('Past 90 Days'), 4 => t('Custom')),
       '#default_value' => $filtervalue, 
   );
   
  
  $form['selected_dates'] = array( 
    '#markup' => '<div class="formright"><div class="calendars"><div class="calendar_set"><div id="selected_date_form" class="pull-left"></div><div id="selected_date_to" class="pull-left"></div></div></div>'
  );
  
  $form['submit'] = array('#type' => 'submit', '#value' => t('Submit'),'#prefix' => '<div class="clearfix button">','#suffix' => '</div></div>');  
   if ($filtervalue != 4) {
     $cid = 'forumstats_' . $filtervalue;
   } else {
     $cide = 'forumstats_' . $filtervalue . $from_date .'-'.$to_date;
   }
   if (!cache_get($cid)) {

    $resoutput = "<div class='from_count_list clearfix'><ul class='forum_stats'>
             <li><span>$num_users</span><p>Total no. of members signed up for the Forum access</p></li>
             <li><span>$num_resent_users</span><p>No. of new forum members</p></li>
             <li><span>$num_active_users</span><p>No. of active members</p></li>
             <li><span>$num_started_forum</span><p>No. of discussions started</p></li>
             <li><span>$num_comment_posted</span><p>No. of posts (comments)</p></li>
           </ul>
            $result
           </div>";
    cache_set($cid, $resoutput, 'cache',  date('tomorrow')); //stores in cache table and expires after 6 months
  } else {
    $return = cache_get($cid);
    $resoutput = ($return->data);
  }
  /* $resoutput = "<div style='clear:both' class='from_count_list'><ul class='forum_stats'>
             <li><span>$num_users</span><p>Total no. of members signed up for the Forum access</p></li>
             <li><span>$num_resent_users</span><p>No. of new forum members</p></li>
             <li><span>$num_active_users</span><p>No. of active members</p></li>
             <li><span>$num_started_forum</span><p>No. of discussions started</p></li>
             <li><span>$num_comment_posted</span><p>No. of posts (comments)</p></li>
           </ul>
            $result
           </div>";*/
 
 $form['contact_information'] = array( 
  '#markup' => $resoutput, 
);  
   
  return $form; 
} 

function forum_stats_settings_form_submit($form, &$form_state){   
   $form_state['rebuild'] = true;
}
 
function codetodate($value){
  return format_date($value ,'custom','d M, Y');
} 


